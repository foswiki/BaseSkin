/*
Typographic grid using modular scales
see http://vimeo.com/17079380 and http://modularscale.com/
*/

// ------------------------------------------------------------
// START SETTINGS

$font_family_main: sans-serif;
$font_family_code: 'Bitstream Vera Sans Mono','Andale Mono','Courier',monospace; 


// font sizes in pixels - only used for body; will be converted to ems
$body_font_size:13;

$strand1_init: $body_font_size;
$strand2_init: 16;

$ratio_golden: 1.618;			// 1:1.618
$ratio_musical_fifth: 1.5;		// 2:3
$ratio_musical_fourth: 1.333;	// 3:4
$ratio: $ratio_musical_fifth;

$body_line_height: 21; //$ratio_golden * $body_font_size; // could be a number as well, like 18 (pixels)

$content_width_px: 980; // pixels
$ajax_content_width_px: 500; // pixels

/* colors */

$color_tool_background_gradient_light: #e7e7e7;
$color_tool_background_gradient_dark: #cacaca;
$color_tool_border: $color_tool_background_gradient_dark;

$color_primary: #3fa209; // distinctive color
$color_header_main: $color_primary;
$color_header: #222;
$color_text: #000;
$color_link: #06c;
$color_link_visited: #03a;
$color_link_black: #222;
$color_link_comment: #ffc;
$color_hint: #999;
$color_text_light: $color_hint;
$color_border_light: #ddd;
$color_border_medium: #dedfe2;
$color_heading_secondary: #53637D;

/* corners */

$corner_default: 3;


// END SETTINGS
// ------------------------------------------------------------

// ------------------------------------------------------------
// START INTERNAL VARIABLES AND FUNCTIONS

@function em_font_size($size) {
	@return $size / $body_font_size;
}
@function em_line_height($size) {
	@return $body_line_height / $size;
}
@mixin em_font_size ($size) {
	font-size: 0em + em_font_size($size);
}
@mixin em_line_height ($size) {
	line-height: 0em + em_line_height($size);
}
@mixin em_margin_top ($size) {
	margin-top: 0em + em_line_height($size);
}
@mixin em_margin_bottom ($size) {
	margin-bottom: 0em + em_line_height($size);
}


// used for pre, foswikiHelp, foswikiNotification, ...
@mixin block_padding ($hide_side_padding: 0) {
	padding-top: $size_block_padding_em;
	padding-bottom: $size_block_padding_em;
	@if $hide_side_padding != 1 {
		padding-left: $size_block_padding_px;
		padding-right: $size_block_padding_px;
	} @else {
		padding-left: 0;
		padding-right: 0;
	}
}

@mixin block_padding_small ($hide_side_padding: 0) {
	padding-top: $size_block_padding_small_em;
	padding-bottom: $size_block_padding_small_em;
	@if $hide_side_padding != 1 {
		padding-left: $size_block_padding_small_px;
		padding-right: $size_block_padding_small_px;
	} @else {
		padding-left: 0;
		padding-right: 0;
	}
}

@mixin block_margin ($hide_side_margin: 0) {
	margin-top: $size_block_padding_em;
	margin-bottom: $size_block_padding_em;
	@if $hide_side_margin != 1 {
		margin-left: $size_block_padding_px;
		margin-right: $size_block_padding_px;
	} @else {
		margin-left: 0;
		margin-right: 0;
	}
}

@mixin block_padding_half_vertical ($hide_side_padding: 0) {
	padding-top: 0.5 * $size_block_padding_em;
	padding-bottom: 0.5 * $size_block_padding_em;
	@if $hide_side_padding != 1 {
		padding-left: $size_block_padding_small_px;
		padding-right: $size_block_padding_small_px;
	} @else {
		padding-left: 0;
		padding-right: 0;
	}
}


	/*
	@mixin block_padding_flattened ($hide_side_padding: 0) {
		padding-top: $size_block_padding_flattened_em;
		padding-bottom: $size_block_padding_flattened_em;
		@if $hide_side_padding != 1 {
			padding-left: $size_block_padding_flattened_px;
			padding-right: $size_block_padding_flattened_px;
		} @else {
			padding-left: 0;
			padding-right: 0;
		}
	}
	*/
	/*
	@mixin block_padding_small ($hide_side_padding: 0) {
		padding-top: $size_block_padding_small_em;
		padding-bottom: $size_block_padding_small_em;
		@if $hide_side_padding != 1 {
			padding-left: $size_block_padding_small_px;
			padding-right: $size_block_padding_small_px;
		} @else {
			padding-left: 0;
			padding-right: 0;
		}
	}
	*/
	
// used for buttons
@mixin block_padding_inputs ($hide_side_padding: 0) {
	@if $hide_side_padding != 1 {
		padding-left: 5px;
		padding-right: 5px;
	} @else {
		padding-left: 0;
		padding-right: 0;
	}
}

@mixin block_padding_menus ($hide_side_padding: 0) {
	padding-top: $size_block_padding_menu_em;
	padding-bottom: $size_block_padding_menu_em;
	@if $hide_side_padding != 1 {
		padding-left: $size_block_padding_menu_px;
		padding-right: $size_block_padding_menu_px;
	} @else {
		padding-left: 0;
		padding-right: 0;
	}
}

@mixin dev_gridline () {
	border-color: fade-out(#00f, 0.9);
	border-width: 1px;
}
@mixin ie-linear-gradient($start-color, $end-color) {
   filter: progid:DXImageTransform.Microsoft.Gradient(GradientType=0, startColorstr='#{$start-color}', endColorstr='#{$end-color}');
   -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start-color}', endColorstr='#{$end-color}')";
}
@mixin gradient ($start, $end) {
    @include ie-linear-gradient($start, $end);
	background:-webkit-gradient(linear,0% 0,0% 100%,from($start),to($end));
	background:-moz-linear-gradient(-90deg,$start,$end);
}
@mixin corner ($radius) {
	-webkit-border-radius:0px + $radius;
	-moz-border-radius:0px + $radius;
	border-radius:0px + $radius;
}

// Using 2 strands to be used interleaved.
$strand1_ratio_1: $strand1_init;

// larger - sizes in pixels
$strand1_ratio_up_1: $strand1_ratio_1 * $ratio;
$strand1_ratio_up_2: $strand1_ratio_up_1 * $ratio;
$strand1_ratio_up_3: $strand1_ratio_up_2 * $ratio;
$strand1_ratio_up_4: $strand1_ratio_up_3 * $ratio;
$strand1_ratio_up_5: $strand1_ratio_up_4 * $ratio;
$strand1_ratio_up_6: $strand1_ratio_up_5 * $ratio;
$strand1_ratio_up_7: $strand1_ratio_up_6 * $ratio;
$strand1_ratio_up_8: $strand1_ratio_up_7 * $ratio;
$strand1_ratio_up_9: $strand1_ratio_up_8 * $ratio;
$strand1_ratio_up_10: $strand1_ratio_up_9 * $ratio;
$strand1_ratio_up_11: $strand1_ratio_up_10 * $ratio;
$strand1_ratio_up_12: $strand1_ratio_up_11 * $ratio;
$strand1_ratio_up_13: $strand1_ratio_up_12 * $ratio;
$strand1_ratio_up_14: $strand1_ratio_up_13 * $ratio;
$strand1_ratio_up_15: $strand1_ratio_up_14 * $ratio;

// smaller - sizes in pixels
$strand1_ratio_down_1: $strand1_ratio_1 / $ratio;
$strand1_ratio_down_2: $strand1_ratio_down_1 / $ratio;
$strand1_ratio_down_3: $strand1_ratio_down_2 / $ratio;
$strand1_ratio_down_4: $strand1_ratio_down_3 / $ratio;
$strand1_ratio_down_5: $strand1_ratio_down_4 / $ratio;
$strand1_ratio_down_6: $strand1_ratio_down_5 / $ratio;
$strand1_ratio_down_7: $strand1_ratio_down_6 / $ratio;
$strand1_ratio_down_8: $strand1_ratio_down_7 / $ratio;

// strand 2

$strand2_ratio_1: $strand2_init;

// larger - sizes in pixels
$strand2_ratio_up_1: $strand2_ratio_1 * $ratio;
$strand2_ratio_up_2: $strand2_ratio_up_1 * $ratio;
$strand2_ratio_up_3: $strand2_ratio_up_2 * $ratio;
$strand2_ratio_up_4: $strand2_ratio_up_3 * $ratio;
$strand2_ratio_up_5: $strand2_ratio_up_4 * $ratio;
$strand2_ratio_up_6: $strand2_ratio_up_5 * $ratio;
$strand2_ratio_up_7: $strand2_ratio_up_6 * $ratio;
$strand2_ratio_up_8: $strand2_ratio_up_7 * $ratio;
$strand2_ratio_up_9: $strand2_ratio_up_8 * $ratio;
$strand2_ratio_up_10: $strand2_ratio_up_9 * $ratio;
$strand2_ratio_up_11: $strand2_ratio_up_10 * $ratio;
$strand2_ratio_up_12: $strand2_ratio_up_11 * $ratio;
$strand2_ratio_up_13: $strand2_ratio_up_12 * $ratio;
$strand2_ratio_up_14: $strand2_ratio_up_13 * $ratio;
$strand2_ratio_up_15: $strand2_ratio_up_14 * $ratio;

// smaller - sizes in pixels
$strand2_ratio_down_1: $strand2_ratio_1 / $ratio;
$strand2_ratio_down_2: $strand2_ratio_down_1 / $ratio;
$strand2_ratio_down_3: $strand2_ratio_down_2 / $ratio;
$strand2_ratio_down_4: $strand2_ratio_down_3 / $ratio;
$strand2_ratio_down_5: $strand2_ratio_down_4 / $ratio;
$strand2_ratio_down_6: $strand2_ratio_down_5 / $ratio;
$strand2_ratio_down_7: $strand2_ratio_down_6 / $ratio;
$strand2_ratio_down_8: $strand2_ratio_down_7 / $ratio;

// set ratios for common elements

// font sizes
$size_small:    $strand2_ratio_down_1;
$size_smallish: $strand1_ratio_1;
$size_smallish_font: 0.9 * $strand1_ratio_1;
$size_p:        $strand1_ratio_1;
$size_h6:       $strand1_ratio_1;
$size_h5:       $strand2_ratio_1;
$size_h4:       $strand1_ratio_up_1;
$size_h3:       $strand2_ratio_up_1;
$size_h2:       $strand1_ratio_up_2;
$size_h1:       $strand2_ratio_up_2;

// block padding
$size_block_padding_em: 0em + $strand1_ratio_up_1 / $body_font_size;
$size_block_padding_px: 0px + $strand1_ratio_up_1;

$size_block_padding_flattened_em: 0em + $strand1_ratio_down_1 / $body_font_size;
$size_block_padding_flattened_px: 0px + $strand1_ratio_down_1;

$size_block_padding_small_em: 0em + $strand1_ratio_1 / $body_font_size;
$size_block_padding_small_px: 0px + $strand1_ratio_1;

$size_block_padding_menu_em: 0em + $strand1_ratio_down_2 / $body_font_size;
$size_block_padding_menu_px: 0px + $strand2_ratio_down_1;


// END INTERNAL VARIABLES AND FUNCTIONS
// ------------------------------------------------------------

/* reset values set in base.css */

body {
	width: 100%;
}

.jqTab {
	margin:0;
	padding:0;
	border:none;
}

body,
select,
input,
textarea {
	color: $color_text;
	font-family: $font_family_main;
}

p {
	margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 { 
	text-rendering: optimizeLegibility; 
	font-weight: normal;
	-webkit-margin-before:0;
	-webkit-margin-after:0;
}

/*
You will find 2 ways to set the line height of elements, and they are both wrong:

   1. @body_line_height / @size : leads to very small line heights that cause overlap
   2. don't set line height at all but let the browser use body's line height : with a setting of 1.5 that leads to very high line heights with too much whitespace.

The solution is to use line-height: 1 (right, no em!) for headers, and the desired line height for normal text only.
*/
body {
	font-size: 0px + $body_font_size;
	@include em_line_height($size_p);
}

h1 {
	@include em_font_size($size_h1);
	line-height: 1;
	@include em_margin_top($size_h1);
	@include em_margin_bottom($size_h1);
}
.foswikiViewPage h1 {
	color: $color_header_main;
}
h2 {
	@include em_font_size($size_h2);
	line-height: 1;
	@include em_margin_top($size_h2);
	@include em_margin_bottom($size_h2);
}
h3,
.foswikiManagePage h1 {
	@include em_font_size($size_h3);
	line-height: 1;
	@include em_margin_top($size_h3);
	@include em_margin_bottom($size_h3);
}
h4,
.foswikiLarge,
.foswikiManagePage h2 {
	@include em_font_size($size_h4);
	line-height: 1;
	@include em_margin_top($size_h4);
	@include em_margin_bottom($size_h4);
}
h5,
.foswikiManagePage h3 {
	@include em_font_size($size_h5);
	line-height: 1;
	@include em_margin_top($size_h5);
	@include em_margin_bottom($size_h5);
}
.foswikiViewPage h5 {
	font-variant: small-caps;
}
h6,
.foswikiManagePage h4 {
	@include em_font_size($size_h6);
	line-height: 1;
	@include em_margin_top($size_h6);
	@include em_margin_bottom($size_h6);
}
.foswikiViewPage h6 {
	font-variant: small-caps;
}
h2, h3, h4, h5, h6 {
	color: $color_header;
}
p,
pre,
blockquote,
iframe,
label,
address,
select,
td,
th,
ul,
ol,
dl,
hr,
input,
textarea,
.foswikiInputField,
.foswikiInputFieldDisabled,
.foswikiInputFieldReadOnly,
input[type="text"],
input[type="password"],
.foswikiTable,
.jqTabPane,
.foswikiBroadcastMessage,
.foswikiImage,
.foswikiMessage,
.foswikiNotification,
.foswikiAttachments {
	@include em_font_size($size_p);
	@include em_line_height($size_p);
}

/* vertical margin for block level elements */
p,
pre,
blockquote,
iframe,
address,
ul,
ol,
dl,
hr,
.foswikiTable,
.jqTabPane,
.foswikiBroadcastMessage,
.foswikiImage,
.foswikiMessage,
.foswikiNotification,
.foswikiAttachments,
.foswikiFormSteps {
	@include em_margin_top($size_p);
	@include em_margin_bottom($size_p);
}

dt,
li {
	@include em_font_size($size_p);
}
abbr, code, kbd, samp, small, var {

}

/* smaller text */
.foswikiSmallish {
	@include em_font_size($size_smallish_font);
	@include em_line_height($size_smallish_font);
}
small,
.foswikiSmall {
	@include em_font_size($size_small);
	@include em_line_height($size_small);
}

/* consistent block size */

blockquote,
pre,
.foswikiHelp,
.foswikiBroadcastMessage,
.foswikiNotification {
	@include block_padding;
	
	li {
		list-style-type: circle;
	}
}

.foswikiFormSteps {
	border-top: 1px solid $color_border_light;
	h3, h4, h5, h6 {
		color: $color_heading_secondary;
	}
}
.foswikiFormStep {
	@include block_padding(1);
	border-bottom: 1px solid $color_border_light;
	
	p {
		margin-bottom: 0;
	}
}

/* if we don't use a background or border for blockquotes, we don't need the top and bottom padding */
blockquote {
	padding-top: 0;
	padding-bottom: 0;
	font-family: georgia, serif;
	font-style: italic;
}

/* code texts */

body,
blockquote {
	pre,
	code,
	tt,
	kbd,
	samp,
	.foswikiDiffDebug {
		font-family: $font_family_code;
		font-style: normal;
		@include em_font_size($size_smallish_font);
		@include em_line_height($size_smallish_font);
	}
}
pre {
	background: #f5f5f5;
}

dd,
ul,
ol {
	margin-left: 0px + $body_line_height;
}

/* prevent double padding with bullet list in block */

blockquote ol:first-child,
pre ol:first-child,
.foswikiHelp ol:first-child,
.foswikiBroadcastMessage ol:first-child,
.foswikiNotification ol:first-child,
blockquote ul:first-child,
pre ul:first-child,
.foswikiHelp ul:first-child,
.foswikiBroadcastMessage ul:first-child,
.foswikiNotification ul:first-child {
    margin-top: 0;
    margin-bottom: 0;
}

/* links */

a:link,
a:visited {
	text-decoration: none;
}
a:hover {
	text-decoration: underline;
}
a:link:focus,
a:visited:focus,
a:link,
a:link:active,
a:visited:active {
	color: $color_link;
}
a:visited {
	color: $color_link;
}

/* form elements */

input[type="text"],
input[type="password"] {
	@include block_padding_inputs(0);
}

/* buttons */

/* set button height */

$prefix_jq: jq;
$prefix_fw: foswiki;

a.#{$prefix_jq}Button,
a.#{$prefix_fw}Button,
button.#{$prefix_jq}Button,
button.#{$prefix_fw}Button,
.#{$prefix_fw}Submit,
input.#{$prefix_fw}Submit {
	&,
	&:hover {
		line-height: 0em + em_line_height($size_p);
		font-size: 0px + $body_font_size;
		font-family: $font_family_main;
	}
}


/* miscellaneous */

hr {
	color: #ccc;
	background-color: #ccc;
}

::-moz-selection {
	background: $color_primary;
	color: #fff;
	text-shadow: none;
}
::selection {
	background: $color_primary;
	color: #fff;
	text-shadow: none;
}

.foswikiGrayText,
.foswikiHint {
	color: $color_hint;
}

/* tabs */

.jqTabContents {
	@include block_padding(1);
	
	& :first-child {
		margin-top: 0;
	}
}
.jqTabPaneSimple .jqTabGroup a,
.jqTabPaneSimple .jqTabGroup a:hover {
	@include block_padding_menus;
}


/* structural elements */

$contentSidePadding: ($content_width_px - $strand2_ratio_up_10) / 2;
$inner_content_width: $content_width_px - 2*$contentSidePadding;

.foswikiPage {}
.foswikiTopic,
.foswikiTopBarContents {
	width: 0px + $inner_content_width;
	padding-left: 0px + $contentSidePadding;
	padding-right: 0px + $contentSidePadding;
	margin:0 auto;
}

.foswikiTopic {
	position: relative;
	padding-top: 0em + $strand1_ratio_up_2 / $body_font_size;
	padding-bottom: 0em + $strand1_ratio_up_2 / $body_font_size;
}

.foswikiToolHeader {
	@include em_margin_top($size_p);
	@include block_padding_menus;
	background-color: $color_tool_background_gradient_dark;
	@include gradient($color_tool_background_gradient_light, $color_tool_background_gradient_dark);
	@include corner($corner_default);
	border:1px solid $color_tool_background_gradient_dark;
	vertical-align: middle;
		
	ul.foswikiToolButtonRow {
		position: relative;
		margin: 0;
		float: right;
		padding: 0;
		list-style: none;
		
		li {
			float: right;
			margin-left: 5px;
		}
	}
	span {
		margin-left: 1em;
	}
	input[type="checkbox"] {
		color: red;
	}
	a:link,
	a:visited {
		color: $color_link_black;
	}
	
	a.foswikiSort {
		margin-left: $size_block_padding_menu_em;
	}
}

/* attachments */
.foswikiAttachments {

	h4 {
		@include block_padding_half_vertical;
		padding-top: 0;
		padding-bottom: 0;
		
	}
	.foswikiAttachment {
		@include block_padding_half_vertical;

		a:link,
		a:visited {
			color: $color_link_black;
		}
		
		.foswikiSearchResultContents {
			margin-left: 0px + $strand2_ratio_up_2;
		}
		
		.foswikiSearchResultTitle {
			a {
				@include em_font_size($size_h6);
			}
		}
		
		.foswikiSummary {
			font-style: italic;
			font-family: georgia, serif;
		}		
			
		.foswikiSearchResultMeta,
		.foswikiSummary {
			color: $color_hint;
		}
	}
	ul, li {
		margin: 0;
		padding: 0;
		list-style: none;
		list-style-image: none;
	}
	ul {
		clear: both;
	}
	
	&.bsHideDetails .foswikiSearchResultMeta {
		display:none;
	}
}

/* vertical theme */
.jqTabPane.jqTabPaneSimplevertical {

	$menu_width: $strand2_ratio_up_7 - 2 * $contentSidePadding;
	$color_background_normal: #eaeef3;
	$color_background_selected: #fff;

	position: relative;
	border-top: 1px solid $color_border_medium;
	
	& ul.jqTabGroup {
		width: 0px + $menu_width;
		float: none;
		
		& li {
			position: relative;
		}
		
		& li img {
			vertical-align: text-bottom;
		}
		
		& li a {
			@include block_padding_menus;
			display: block;
			background-color: $color_background_normal;
			color: $color_link_black;
			$padding_side: $size_block_padding_small_px;
			width: $menu_width - 2 * $padding_side;
			border-bottom:1px solid $color_border_medium;
			
			&:hover {
				background-color: $color_background_selected;
				color: #000;
			}
		}
		& li.current a,
		& li.current a:hover {
			background-color: $color_background_selected;
		}

		& li.current a:after,
		& li a:hover:after {
			content:"";
			display: block;
			position: absolute;
			top: 50%;
			right: 0;
			width: 0;
			height: 0;
			line-height: 0;
			font-size: 0;
			border-width:4px;
			margin: -5px 5px 0 0;
			border-style: solid;
			border-color: transparent transparent transparent #ccc;
		}

			
	}
	span.foswikiClear {
		clear: none;
	}
	& .jqTab {
		position: absolute;
		width: 0px + $inner_content_width - $menu_width;
		left: 0px + $menu_width;
		padding-left: 0px + $strand1_ratio_up_2;
	}
	
	& .jqTabContents {
		border: none;
	}
	
	.foswikiFormStep:last-child {
		border: none;
	}
}

/* EXTENSION SPECIFIC */

.foswikiAjaxPage .foswikiTopic {
	width: 0px + $inner_content_width / 2;
	padding-left: 0px + $contentSidePadding / 2;
	padding-right: 0px + $contentSidePadding / 2;
	padding-bottom: 0;
}
.foswikiAjaxPage {
	.foswikiFormStep {
		@include block_padding_small(1);
	}
	h2 {
		@include em_margin_top($size_h3);
		@include em_margin_bottom($size_h3);
	}
	h3 {
		@include em_margin_top($size_h4);
		@include em_margin_bottom($size_h4);
	}
	h4 {
		@include em_margin_top($size_h5);
		@include em_margin_bottom($size_h5);
	}
}
#facebox .close {
	right: 0px + $contentSidePadding / 2;
}


/* dev */
.foswikiDevGrid {
	width: 100%;
	position: absolute;
	top: 0;
	left: 0;
}
.foswikiDevGridRow {
	width: 100%;
	height: 0px + $body_line_height - 1;
	border-style: none none solid none;
	@include dev_gridline;
}
.foswikiDevGridCol {
	border-style: none none none solid;
	@include dev_gridline;
}
